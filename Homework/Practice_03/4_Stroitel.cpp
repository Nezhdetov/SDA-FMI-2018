/*
Бате Жоро мазача е уникален строител който се нуждае от вашата помощ. Имате N сгради като ви е дадена височината
в метри на всяка сграда. Като един истински перфекционист той иска всички сгради да имат еднаква височина,
затова той е наел специална компания която може да скъсява или увеличава височината на всяка една отделна сграда с 1 метър.
Проблемът е че всяка сграда е с различно качество, затова за тази си услуга компанията има различна тарифа
с цена за увеличаване/намаляне 1 метър за всяка индивидуална сграда.

От вас се иска да помогнете на Жоро да направи всички сгради с еднаква височина плащайки минимална сума на фирмата
за увеличаване/намаляне на всяка сграда.

Input Format
Вход:
N - брой на сградите
N числа височината на всяка сграда
C числа цената за промяна +- 1 метър за съответната сграда

Constraints
N <= 100000

Височината на всяка сграда ще е между 0 и 10000
Цената за промяна на 1 метър в + или - ще е между 0 и 10000

Output Format
Минималната сума за която Жоро използвайки услугата на фирмата да получи сгради с равни височини.

Пример:
3
1 4 4
2 0 0

Изход:
0
Посянение:
Можем да направим сграда #2 да е 1 метър безплатно и сгррада #3 1 метър безплатно използвайки услугите на фирмата.
Още един пример:
3
1 2 3
10 100 1000
Изход:
120
Най-добре е да направим всички сгради с височина 3. Ще ни струва 100 + 20 ( 1 метър на 2-рата сграда и 2 метра на 1-вата сграда )
 */

#include <iostream>

int calculateCheapestPrice(int* arr, int* prices, int length)
{
    int lowestPrice = 1000000000;
    int heights[100000];
    for (int i = 0; i < length; i++)
    {
        heights[i] = arr[i];
    }

    for (int k = 0; k < length; k++)
    {
        int current = arr[k];
        int price = 0;
        for (int i = 0; i < length; i++)
        {
            if (i == k)
            {
                continue;
            }

            while (heights[i] != current)
            {
                if (heights[i] < current)
                {
                    heights[i]++;
                }
                else if (heights[i] > current)
                {
                    heights[i]--;
                }
                price += prices[i];
            }
        }

        if (price < lowestPrice)
        {
            lowestPrice = price;
        }

        for (int i = 0; i < length; i++)
        {
            heights[i] = arr[i];
        }
    }

    return lowestPrice;
}

int main()
{
    int N;
    std::cin >> N;
    int arr[100000];
    int prices[100000];

    for (int i = 0; i < N; i++)
    {
        std::cin >> arr[i];
    }

    for (int i = 0; i < N; i++)
    {
        std::cin >> prices[i];
    }

    int price = calculateCheapestPrice(arr, prices, N);

    std::cout << price;
    return 0;
}